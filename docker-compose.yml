version: "3.8"

services:
  mysqldb:
    container_name: mysqldb
    image: mysql
    environment:
      MYSQL_USER: springuser
      MYSQL_PASSWORD: ThePassword
      MYSQL_DATABASE: db_example
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3303:3306
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - my-network

  # springboot-restful-webservices:
  #   container_name: springboot-restful-webservices
  #   build:
  #     context: ./java-mysql
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - mysqldb
  #   environment:
  #     - spring.jpa.hibernate.ddl-auto=update
  #     - spring.datasource.url=jdbc:mysql://mysqldb:3306/db_example
  #     - spring.datasource.username=springuser
  #     - spring.datasource.password=ThePassword
  #     - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
  #   networks:
  #     springboot-mysql-net:
  #   restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    container_name: elasticsearch
    ports:
      - 9200:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - TZ=Asia/Jerusalem
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - my-network
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.22
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - my-network
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.22
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5000:5000
      - 9600:9600
    networks:
      - my-network
    depends_on:
      - elasticsearch
volumes:
  es_data:
    driver: local
  # mysql-workbench:
  #   image: lscr.io/linuxserver/mysql-workbench:latest
  #   container_name: mysql-workbench
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #   volumes:
  #     - /path/to/config:/config
  #   ports:
  #     - 3000:3000
  #     - 3001:3001
  #   cap_add:
  #     - IPC_LOCK
  #   restart: unless-stopped
networks:
  my-network:
    driver: bridge
