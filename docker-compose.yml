version: '3.9'
services:
  mysqldb:
    container_name: mysqldb
    image: mysql
    environment:
      MYSQL_USER: springuser
      MYSQL_PASSWORD: ThePassword
      MYSQL_DATABASE: db_example
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3303:3306'
    volumes:
      - './mysql-data:/var/lib/mysql'
    networks:
      - my-network
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.22'
    container_name: elasticsearch
    restart: always
    ports:
      - '9200:9200'
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - TZ=Asia/Jerusalem
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - 'es_data:/usr/share/elasticsearch/data'
    networks:
      - my-network
  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.17.22'
    container_name: kibana
    restart: always
    environment:
      - 'ELASTICSEARCH_HOSTS=http://elasticsearch:9200'
    ports:
      - '5601:5601'
    networks:
      - my-network
  logstash:
    image: 'docker.elastic.co/logstash/logstash:7.17.22'
    container_name: logstash
    restart: always
    environment:
      - TZ=Asia/Jerusalem
    volumes:
      - './logstash.conf:/usr/share/logstash/pipeline/logstash.conf'
    ports:
      - '5000:5000'
    networks:
      - my-network
    depends_on:
      - elasticsearch
#  springboot-restful-webservices:
#    container_name: springboot-restful-webservices
#    build:
#      context: ./java-mysql
#      dockerfile: Dockerfile
#    ports:
#      - '8080:8080'
#    depends_on:
#      - mysqldb
#    environment:
#      - spring.jpa.hibernate.ddl-auto=update
#      - spring.datasource.url=jdbc:mysql://mysqldb:3306/db_example
#      - spring.datasource.username=springuser
#      - spring.datasource.password=ThePassword
#      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#      - elasticsearch.host=localhost:9200
#      - server.servlet.context-path=/
#      - spring.jpa.show-sql=true
#      - spring.main.allow-bean-definition-overriding=true
#      - management.endpoint.health.show-details=always
#      - management.endpoints.web.base-path=/
#      - management.endpoints.web.exposure.include=health,prometheus,info
#      - spring.output.ansi.enabled=ALWAYS
#      - spring.banner.location=classpath:/banner.txt
#    networks:
#      - my-network
volumes:
  es_data:
    driver: local
networks:
  my-network:
    driver: bridge
